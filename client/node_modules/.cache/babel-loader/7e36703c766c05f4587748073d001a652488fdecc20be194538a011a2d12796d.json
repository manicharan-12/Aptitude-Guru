{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern-chatbot\\\\client\\\\src\\\\components\\\\ChatBot\\\\index.js\",\n  _s = $RefreshSig$();\n// src/Chatbot.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Input, Button, List, Typography, Card } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Text\n} = Typography;\nconst predefinedOptions = [{\n  question: \"What is aptitude?\",\n  answer: \"Aptitude is a natural ability to do something well.\"\n}, {\n  question: \"How can I improve my teaching skills?\",\n  answer: \"Practice regularly and seek feedback from peers and students.\"\n}, {\n  question: \"What resources can help with teaching?\",\n  answer: \"There are many online courses, books, and workshops available to help improve teaching skills.\"\n}];\nconst ChatContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  max-height: 100vh;\n  padding: 16px;\n  background-color: #f0f2f5;\n`;\n_c = ChatContainer;\nconst ChatBox = styled(Card)`\n  flex: 1;\n  overflow-y: auto;\n  margin-bottom: 16px;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n`;\n_c2 = ChatBox;\nconst OptionsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin-bottom: 16px;\n`;\n_c3 = OptionsContainer;\nconst OptionButton = styled(Button)`\n  flex: 1 1 auto;\n  margin: 4px 0;\n`;\n_c4 = OptionButton;\nconst Message = styled.div`\n  padding: 12px 20px;\n  background: ${props => props.isBot ? '#e6f7ff' : '#fff'};\n  border: 1px solid #d9d9d9;\n  border-radius: 8px;\n  margin-bottom: 8px;\n  align-self: ${props => props.isBot ? 'flex-start' : 'flex-end'};\n  max-width: 80%;\n  text-align: ${props => props.isBot ? 'left' : 'right'};\n`;\n_c5 = Message;\nconst InputContainer = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n_c6 = InputContainer;\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleOptionClick = option => {\n    setMessages([...messages, {\n      text: option.question,\n      isBot: false\n    }, {\n      text: option.answer,\n      isBot: true\n    }]);\n  };\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleSend = () => {\n    if (inputValue.trim() === '') return;\n    setMessages([...messages, {\n      text: inputValue,\n      isBot: false\n    }]);\n    setInputValue('');\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        text: \"Your ticket has been raised and we will get back to you soon.\",\n        isBot: true\n      }]);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatBox, {\n      title: \"Chatbot\",\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        dataSource: messages,\n        renderItem: item => /*#__PURE__*/_jsxDEV(Message, {\n          isBot: item.isBot,\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionsContainer, {\n      children: predefinedOptions.map((option, index) => /*#__PURE__*/_jsxDEV(OptionButton, {\n        onClick: () => handleOptionClick(option),\n        children: option.question\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {\n        value: inputValue,\n        onChange: handleInputChange,\n        maxLength: 250,\n        placeholder: \"Enter your message here...\",\n        autoSize: {\n          minRows: 1,\n          maxRows: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 38\n        }, this),\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"2MmCiZCEgwS2WNxtRiJNjiHnPLc=\");\n_c7 = Chatbot;\nexport default Chatbot;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"ChatBox\");\n$RefreshReg$(_c3, \"OptionsContainer\");\n$RefreshReg$(_c4, \"OptionButton\");\n$RefreshReg$(_c5, \"Message\");\n$RefreshReg$(_c6, \"InputContainer\");\n$RefreshReg$(_c7, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Input","Button","List","Typography","Card","SendOutlined","styled","jsxDEV","_jsxDEV","TextArea","Text","predefinedOptions","question","answer","ChatContainer","div","_c","ChatBox","_c2","OptionsContainer","_c3","OptionButton","_c4","Message","props","isBot","_c5","InputContainer","_c6","Chatbot","_s","messages","setMessages","inputValue","setInputValue","chatEndRef","_chatEndRef$current","current","scrollIntoView","behavior","handleOptionClick","option","text","handleInputChange","e","target","value","handleSend","trim","setTimeout","prev","children","title","dataSource","renderItem","item","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","index","onClick","onChange","maxLength","placeholder","autoSize","minRows","maxRows","type","icon","_c7","$RefreshReg$"],"sources":["D:/mern-chatbot/client/src/components/ChatBot/index.js"],"sourcesContent":["// src/Chatbot.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Input, Button, List, Typography, Card } from 'antd';\r\nimport { SendOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\n\r\nconst { TextArea } = Input;\r\nconst { Text } = Typography;\r\n\r\nconst predefinedOptions = [\r\n  { question: \"What is aptitude?\", answer: \"Aptitude is a natural ability to do something well.\" },\r\n  { question: \"How can I improve my teaching skills?\", answer: \"Practice regularly and seek feedback from peers and students.\" },\r\n  { question: \"What resources can help with teaching?\", answer: \"There are many online courses, books, and workshops available to help improve teaching skills.\" },\r\n];\r\n\r\nconst ChatContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  max-height: 100vh;\r\n  padding: 16px;\r\n  background-color: #f0f2f5;\r\n`;\r\n\r\nconst ChatBox = styled(Card)`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  margin-bottom: 16px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n`;\r\n\r\nconst OptionsContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst OptionButton = styled(Button)`\r\n  flex: 1 1 auto;\r\n  margin: 4px 0;\r\n`;\r\n\r\nconst Message = styled.div`\r\n  padding: 12px 20px;\r\n  background: ${props => (props.isBot ? '#e6f7ff' : '#fff')};\r\n  border: 1px solid #d9d9d9;\r\n  border-radius: 8px;\r\n  margin-bottom: 8px;\r\n  align-self: ${props => (props.isBot ? 'flex-start' : 'flex-end')};\r\n  max-width: 80%;\r\n  text-align: ${props => (props.isBot ? 'left' : 'right')};\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  gap: 8px;\r\n`;\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const chatEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleOptionClick = (option) => {\r\n    setMessages([...messages, { text: option.question, isBot: false }, { text: option.answer, isBot: true }]);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSend = () => {\r\n    if (inputValue.trim() === '') return;\r\n    setMessages([...messages, { text: inputValue, isBot: false }]);\r\n    setInputValue('');\r\n    setTimeout(() => {\r\n      setMessages(prev => [...prev, { text: \"Your ticket has been raised and we will get back to you soon.\", isBot: true }]);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <ChatBox title=\"Chatbot\">\r\n        <List\r\n          dataSource={messages}\r\n          renderItem={(item) => (\r\n            <Message isBot={item.isBot}>\r\n              <Text>{item.text}</Text>\r\n            </Message>\r\n          )}\r\n        />\r\n        <div ref={chatEndRef} />\r\n      </ChatBox>\r\n      <OptionsContainer>\r\n        {predefinedOptions.map((option, index) => (\r\n          <OptionButton key={index} onClick={() => handleOptionClick(option)}>\r\n            {option.question}\r\n          </OptionButton>\r\n        ))}\r\n      </OptionsContainer>\r\n      <InputContainer>\r\n        <TextArea\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          maxLength={250}\r\n          placeholder=\"Enter your message here...\"\r\n          autoSize={{ minRows: 1, maxRows: 3 }}\r\n        />\r\n        <Button type=\"primary\" icon={<SendOutlined />} onClick={handleSend}>\r\n          Send\r\n        </Button>\r\n      </InputContainer>\r\n    </ChatContainer>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}