{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern-chatbot\\\\client\\\\src\\\\components\\\\ChatBot\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Input, Button, Typography, Card } from \"antd\";\nimport { SendOutlined } from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport Cookie from '';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Text\n} = Typography;\nconst predefinedOptions = [{\n  question: \"What is aptitude?\",\n  answer: \"Aptitude is a natural ability to do something well.\"\n}, {\n  question: \"How can I improve my teaching skills?\",\n  answer: \"Practice regularly and seek feedback from peers and students.\"\n}, {\n  question: \"What resources can help with teaching?\",\n  answer: \"There are many online courses, books, and workshops available to help improve teaching skills.\"\n}];\nconst ChatContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  max-height: 100vh;\n  padding: 16px;\n  background-color: #f0f2f5;\n`;\n_c = ChatContainer;\nconst ChatBox = styled(Card)`\n  flex: 1;\n  overflow-y: auto;\n  margin-bottom: 16px;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = ChatBox;\nconst OptionsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin-bottom: 16px;\n`;\n_c3 = OptionsContainer;\nconst OptionButton = styled(Button)`\n  flex: 1 1 auto;\n  margin: 4px 0;\n`;\n_c4 = OptionButton;\nconst MessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n_c5 = MessageContainer;\nconst BotMessage = styled.div`\n  padding: 12px 20px;\n  background: #e6f7ff;\n  border: 1px solid #d9d9d9;\n  border-radius: 8px;\n  margin-bottom: 8px;\n  align-self: flex-start;\n  max-width: 80%;\n  text-align: left;\n`;\n_c6 = BotMessage;\nconst UserMessage = styled.div`\n  padding: 12px 20px;\n  background: #fff;\n  border: 1px solid #d9d9d9;\n  border-radius: 8px;\n  margin-bottom: 8px;\n  align-self: flex-end;\n  max-width: 80%;\n  text-align: right;\n`;\n_c7 = UserMessage;\nconst InputContainer = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n_c8 = InputContainer;\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const handleOptionClick = option => {\n    setMessages([...messages, {\n      text: option.question,\n      isBot: false\n    }, {\n      text: option.answer,\n      isBot: true\n    }]);\n  };\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleSend = async () => {\n    if (inputValue.trim() === \"\") return;\n    const userMessage = {\n      text: inputValue,\n      isBot: false\n    };\n    setMessages([...messages, userMessage]);\n    setInputValue(\"\");\n    try {\n      await axios.post(\"http://localhost:8000/ticket\", {\n        userId: \"USER_ID\",\n        message: inputValue\n      });\n      await axios.post(\"http://localhost:8000/conversation\", {\n        userId: \"USER_ID\",\n        messages: [...messages, userMessage]\n      });\n      setMessages(prev => [...prev, {\n        text: \"Your ticket has been raised and we will get back to you soon.\",\n        isBot: true\n      }]);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n  const token = Cookies.get(\"jwt_token\");\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatBox, {\n      title: \"Chatbot\",\n      children: /*#__PURE__*/_jsxDEV(MessageContainer, {\n        children: [messages.map((item, index) => item.isBot ? /*#__PURE__*/_jsxDEV(BotMessage, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(UserMessage, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionsContainer, {\n      children: predefinedOptions.map((option, index) => /*#__PURE__*/_jsxDEV(OptionButton, {\n        onClick: () => handleOptionClick(option),\n        children: option.question\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {\n        value: inputValue,\n        onChange: handleInputChange,\n        maxLength: 250,\n        placeholder: \"Enter your message here...\",\n        autoSize: {\n          minRows: 1,\n          maxRows: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 38\n        }, this),\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"B/zGu/icH6C50GHlh0/Hqb6JNck=\");\n_c9 = Chatbot;\nexport default Chatbot;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"ChatBox\");\n$RefreshReg$(_c3, \"OptionsContainer\");\n$RefreshReg$(_c4, \"OptionButton\");\n$RefreshReg$(_c5, \"MessageContainer\");\n$RefreshReg$(_c6, \"BotMessage\");\n$RefreshReg$(_c7, \"UserMessage\");\n$RefreshReg$(_c8, \"InputContainer\");\n$RefreshReg$(_c9, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Input","Button","Typography","Card","SendOutlined","styled","axios","Cookie","jsxDEV","_jsxDEV","TextArea","Text","predefinedOptions","question","answer","ChatContainer","div","_c","ChatBox","_c2","OptionsContainer","_c3","OptionButton","_c4","MessageContainer","_c5","BotMessage","_c6","UserMessage","_c7","InputContainer","_c8","Chatbot","_s","messages","setMessages","inputValue","setInputValue","chatEndRef","_chatEndRef$current","current","scrollIntoView","behavior","handleOptionClick","option","text","isBot","handleInputChange","e","target","value","handleSend","trim","userMessage","post","userId","message","prev","error","console","token","Cookies","get","Navigate","to","fileName","_jsxFileName","lineNumber","columnNumber","children","title","map","item","index","ref","onClick","onChange","maxLength","placeholder","autoSize","minRows","maxRows","type","icon","_c9","$RefreshReg$"],"sources":["D:/mern-chatbot/client/src/components/ChatBot/index.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Input, Button, Typography, Card } from \"antd\";\r\nimport { SendOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\nimport Cookie from ''\r\n\r\nconst { TextArea } = Input;\r\nconst { Text } = Typography;\r\n\r\nconst predefinedOptions = [\r\n  {\r\n    question: \"What is aptitude?\",\r\n    answer: \"Aptitude is a natural ability to do something well.\",\r\n  },\r\n  {\r\n    question: \"How can I improve my teaching skills?\",\r\n    answer: \"Practice regularly and seek feedback from peers and students.\",\r\n  },\r\n  {\r\n    question: \"What resources can help with teaching?\",\r\n    answer:\r\n      \"There are many online courses, books, and workshops available to help improve teaching skills.\",\r\n  },\r\n];\r\n\r\nconst ChatContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  max-height: 100vh;\r\n  padding: 16px;\r\n  background-color: #f0f2f5;\r\n`;\r\n\r\nconst ChatBox = styled(Card)`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  margin-bottom: 16px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst OptionsContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst OptionButton = styled(Button)`\r\n  flex: 1 1 auto;\r\n  margin: 4px 0;\r\n`;\r\n\r\nconst MessageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst BotMessage = styled.div`\r\n  padding: 12px 20px;\r\n  background: #e6f7ff;\r\n  border: 1px solid #d9d9d9;\r\n  border-radius: 8px;\r\n  margin-bottom: 8px;\r\n  align-self: flex-start;\r\n  max-width: 80%;\r\n  text-align: left;\r\n`;\r\n\r\nconst UserMessage = styled.div`\r\n  padding: 12px 20px;\r\n  background: #fff;\r\n  border: 1px solid #d9d9d9;\r\n  border-radius: 8px;\r\n  margin-bottom: 8px;\r\n  align-self: flex-end;\r\n  max-width: 80%;\r\n  text-align: right;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  gap: 8px;\r\n`;\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const chatEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  const handleOptionClick = (option) => {\r\n    setMessages([\r\n      ...messages,\r\n      { text: option.question, isBot: false },\r\n      { text: option.answer, isBot: true },\r\n    ]);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (inputValue.trim() === \"\") return;\r\n    const userMessage = { text: inputValue, isBot: false };\r\n    setMessages([...messages, userMessage]);\r\n    setInputValue(\"\");\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:8000/ticket\", {\r\n        userId: \"USER_ID\",\r\n        message: inputValue,\r\n      });\r\n      await axios.post(\"http://localhost:8000/conversation\", {\r\n        userId: \"USER_ID\",\r\n        messages: [...messages, userMessage],\r\n      });\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        {\r\n          text: \"Your ticket has been raised and we will get back to you soon.\",\r\n          isBot: true,\r\n        },\r\n      ]);\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n    }\r\n  };\r\n\r\n  const token = Cookies.get(\"jwt_token\");\r\n  \r\n  if (!token) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <ChatBox title=\"Chatbot\">\r\n        <MessageContainer>\r\n          {messages.map((item, index) =>\r\n            item.isBot ? (\r\n              <BotMessage key={index}>\r\n                <Text>{item.text}</Text>\r\n              </BotMessage>\r\n            ) : (\r\n              <UserMessage key={index}>\r\n                <Text>{item.text}</Text>\r\n              </UserMessage>\r\n            )\r\n          )}\r\n          <div ref={chatEndRef} />\r\n        </MessageContainer>\r\n      </ChatBox>\r\n      <OptionsContainer>\r\n        {predefinedOptions.map((option, index) => (\r\n          <OptionButton key={index} onClick={() => handleOptionClick(option)}>\r\n            {option.question}\r\n          </OptionButton>\r\n        ))}\r\n      </OptionsContainer>\r\n      <InputContainer>\r\n        <TextArea\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          maxLength={250}\r\n          placeholder=\"Enter your message here...\"\r\n          autoSize={{ minRows: 1, maxRows: 3 }}\r\n        />\r\n        <Button type=\"primary\" icon={<SendOutlined />} onClick={handleSend}>\r\n          Send\r\n        </Button>\r\n      </InputContainer>\r\n    </ChatContainer>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}