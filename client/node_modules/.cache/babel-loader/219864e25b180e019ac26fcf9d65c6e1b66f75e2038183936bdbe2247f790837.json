{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern-chatbot\\\\client\\\\src\\\\components\\\\ChatBot\\\\index.js\",\n  _s = $RefreshSig$();\n// src/Chatbot.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Input, Button, List, Typography, Card } from 'antd';\nimport { SendOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\nconst {\n  Text\n} = Typography;\nconst predefinedOptions = [{\n  question: \"What is aptitude?\",\n  answer: \"Aptitude is a natural ability to do something well.\"\n}, {\n  question: \"How can I improve my teaching skills?\",\n  answer: \"Practice regularly and seek feedback from peers and students.\"\n}, {\n  question: \"What resources can help with teaching?\",\n  answer: \"There are many online courses, books, and workshops available to help improve teaching skills.\"\n}];\nconst ChatContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 90vh;\n  max-height: 100vh;\n  padding: 16px;\n  background-color: #f0f2f5;\n`;\n_c = ChatContainer;\nconst ChatBox = styled(Card)`\n  flex: 1;\n  overflow-y: auto;\n  margin-bottom: 16px;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = ChatBox;\nconst OptionsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin-bottom: 16px;\n`;\n_c3 = OptionsContainer;\nconst OptionButton = styled(Button)`\n  flex: 1 1 auto;\n  margin: 4px 0;\n`;\n_c4 = OptionButton;\nconst MessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n_c5 = MessageContainer;\nconst BotMessage = styled.div`\n  padding: 12px 20px;\n  background: #e6f7ff;\n  border: 1px solid #d9d9d9;\n  border-radius: 8px;\n  margin-bottom: 8px;\n  align-self: flex-start;\n  max-width: 80%;\n  text-align: left;\n`;\n_c6 = BotMessage;\nconst UserMessage = styled.div`\n  padding: 12px 20px;\n  background: #fff;\n  border: 1px solid #d9d9d9;\n  border-radius: 8px;\n  margin-bottom: 8px;\n  align-self: flex-end;\n  max-width: 80%;\n  text-align: right;\n`;\n_c7 = UserMessage;\nconst InputContainer = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n_c8 = InputContainer;\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  const handleOptionClick = option => {\n    setMessages([...messages, {\n      text: option.question,\n      isBot: false\n    }, {\n      text: option.answer,\n      isBot: true\n    }]);\n  };\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n  const handleSend = () => {\n    if (inputValue.trim() === '') return;\n    setMessages([...messages, {\n      text: inputValue,\n      isBot: false\n    }]);\n    setInputValue('');\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        text: \"Your ticket has been raised and we will get back to you soon.\",\n        isBot: true\n      }]);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatBox, {\n      title: \"Chatbot\",\n      children: /*#__PURE__*/_jsxDEV(MessageContainer, {\n        children: [messages.map((item, index) => item.isBot ? /*#__PURE__*/_jsxDEV(BotMessage, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(UserMessage, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OptionsContainer, {\n      children: predefinedOptions.map((option, index) => /*#__PURE__*/_jsxDEV(OptionButton, {\n        onClick: () => handleOptionClick(option),\n        children: option.question\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {\n        value: inputValue,\n        onChange: handleInputChange,\n        maxLength: 250,\n        placeholder: \"Enter your message here...\",\n        autoSize: {\n          minRows: 1,\n          maxRows: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        icon: /*#__PURE__*/_jsxDEV(SendOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 38\n        }, this),\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"2MmCiZCEgwS2WNxtRiJNjiHnPLc=\");\n_c9 = Chatbot;\nexport default Chatbot;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"ChatBox\");\n$RefreshReg$(_c3, \"OptionsContainer\");\n$RefreshReg$(_c4, \"OptionButton\");\n$RefreshReg$(_c5, \"MessageContainer\");\n$RefreshReg$(_c6, \"BotMessage\");\n$RefreshReg$(_c7, \"UserMessage\");\n$RefreshReg$(_c8, \"InputContainer\");\n$RefreshReg$(_c9, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Input","Button","List","Typography","Card","SendOutlined","styled","jsxDEV","_jsxDEV","TextArea","Text","predefinedOptions","question","answer","ChatContainer","div","_c","ChatBox","_c2","OptionsContainer","_c3","OptionButton","_c4","MessageContainer","_c5","BotMessage","_c6","UserMessage","_c7","InputContainer","_c8","Chatbot","_s","messages","setMessages","inputValue","setInputValue","chatEndRef","_chatEndRef$current","current","scrollIntoView","behavior","handleOptionClick","option","text","isBot","handleInputChange","e","target","value","handleSend","trim","setTimeout","prev","children","title","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","onChange","maxLength","placeholder","autoSize","minRows","maxRows","type","icon","_c9","$RefreshReg$"],"sources":["D:/mern-chatbot/client/src/components/ChatBot/index.js"],"sourcesContent":["// src/Chatbot.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Input, Button, List, Typography, Card } from 'antd';\r\nimport { SendOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\n\r\nconst { TextArea } = Input;\r\nconst { Text } = Typography;\r\n\r\nconst predefinedOptions = [\r\n  { question: \"What is aptitude?\", answer: \"Aptitude is a natural ability to do something well.\" },\r\n  { question: \"How can I improve my teaching skills?\", answer: \"Practice regularly and seek feedback from peers and students.\" },\r\n  { question: \"What resources can help with teaching?\", answer: \"There are many online courses, books, and workshops available to help improve teaching skills.\" },\r\n];\r\n\r\nconst ChatContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 90vh;\r\n  max-height: 100vh;\r\n  padding: 16px;\r\n  background-color: #f0f2f5;\r\n`;\r\n\r\nconst ChatBox = styled(Card)`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  margin-bottom: 16px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst OptionsContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst OptionButton = styled(Button)`\r\n  flex: 1 1 auto;\r\n  margin: 4px 0;\r\n`;\r\n\r\nconst MessageContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst BotMessage = styled.div`\r\n  padding: 12px 20px;\r\n  background: #e6f7ff;\r\n  border: 1px solid #d9d9d9;\r\n  border-radius: 8px;\r\n  margin-bottom: 8px;\r\n  align-self: flex-start;\r\n  max-width: 80%;\r\n  text-align: left;\r\n`;\r\n\r\nconst UserMessage = styled.div`\r\n  padding: 12px 20px;\r\n  background: #fff;\r\n  border: 1px solid #d9d9d9;\r\n  border-radius: 8px;\r\n  margin-bottom: 8px;\r\n  align-self: flex-end;\r\n  max-width: 80%;\r\n  text-align: right;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  gap: 8px;\r\n`;\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const chatEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    chatEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  const handleOptionClick = (option) => {\r\n    setMessages([...messages, { text: option.question, isBot: false }, { text: option.answer, isBot: true }]);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSend = () => {\r\n    if (inputValue.trim() === '') return;\r\n    setMessages([...messages, { text: inputValue, isBot: false }]);\r\n    setInputValue('');\r\n    setTimeout(() => {\r\n      setMessages(prev => [...prev, { text: \"Your ticket has been raised and we will get back to you soon.\", isBot: true }]);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <ChatBox title=\"Chatbot\">\r\n        <MessageContainer>\r\n          {messages.map((item, index) => (\r\n            item.isBot ? (\r\n              <BotMessage key={index}>\r\n                <Text>{item.text}</Text>\r\n              </BotMessage>\r\n            ) : (\r\n              <UserMessage key={index}>\r\n                <Text>{item.text}</Text>\r\n              </UserMessage>\r\n            )\r\n          ))}\r\n          <div ref={chatEndRef} />\r\n        </MessageContainer>\r\n      </ChatBox>\r\n      <OptionsContainer>\r\n        {predefinedOptions.map((option, index) => (\r\n          <OptionButton key={index} onClick={() => handleOptionClick(option)}>\r\n            {option.question}\r\n          </OptionButton>\r\n        ))}\r\n      </OptionsContainer>\r\n      <InputContainer>\r\n        <TextArea\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          maxLength={250}\r\n          placeholder=\"Enter your message here...\"\r\n          autoSize={{ minRows: 1, maxRows: 3 }}\r\n        />\r\n        <Button type=\"primary\" icon={<SendOutlined />} onClick={handleSend}>\r\n          Send\r\n        </Button>\r\n      </InputContainer>\r\n    </ChatContainer>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,UAAU,EAAEC,IAAI,QAAQ,MAAM;AAC5D,SAASC,YAAY,QAAQ,mBAAmB;AAChD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAM;EAAEC;AAAS,CAAC,GAAGT,KAAK;AAC1B,MAAM;EAAEU;AAAK,CAAC,GAAGP,UAAU;AAE3B,MAAMQ,iBAAiB,GAAG,CACxB;EAAEC,QAAQ,EAAE,mBAAmB;EAAEC,MAAM,EAAE;AAAsD,CAAC,EAChG;EAAED,QAAQ,EAAE,uCAAuC;EAAEC,MAAM,EAAE;AAAgE,CAAC,EAC9H;EAAED,QAAQ,EAAE,wCAAwC;EAAEC,MAAM,EAAE;AAAiG,CAAC,CACjK;AAED,MAAMC,aAAa,GAAGR,MAAM,CAACS,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAPIF,aAAa;AASnB,MAAMG,OAAO,GAAGX,MAAM,CAACF,IAAI,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACc,GAAA,GARID,OAAO;AAUb,MAAME,gBAAgB,GAAGb,MAAM,CAACS,GAAG;AACnC;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GALID,gBAAgB;AAOtB,MAAME,YAAY,GAAGf,MAAM,CAACL,MAAM,CAAC;AACnC;AACA;AACA,CAAC;AAACqB,GAAA,GAHID,YAAY;AAKlB,MAAME,gBAAgB,GAAGjB,MAAM,CAACS,GAAG;AACnC;AACA;AACA;AACA,CAAC;AAACS,GAAA,GAJID,gBAAgB;AAMtB,MAAME,UAAU,GAAGnB,MAAM,CAACS,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACW,GAAA,GATID,UAAU;AAWhB,MAAME,WAAW,GAAGrB,MAAM,CAACS,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACa,GAAA,GATID,WAAW;AAWjB,MAAME,cAAc,GAAGvB,MAAM,CAACS,GAAG;AACjC;AACA;AACA,CAAC;AAACe,GAAA,GAHID,cAAc;AAKpB,MAAME,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsC,UAAU,EAAEC,aAAa,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMwC,UAAU,GAAGtC,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IAAA,IAAAwC,mBAAA;IACd,CAAAA,mBAAA,GAAAD,UAAU,CAACE,OAAO,cAAAD,mBAAA,uBAAlBA,mBAAA,CAAoBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,MAAMS,iBAAiB,GAAIC,MAAM,IAAK;IACpCT,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEW,IAAI,EAAED,MAAM,CAAC/B,QAAQ;MAAEiC,KAAK,EAAE;IAAM,CAAC,EAAE;MAAED,IAAI,EAAED,MAAM,CAAC9B,MAAM;MAAEgC,KAAK,EAAE;IAAK,CAAC,CAAC,CAAC;EAC3G,CAAC;EAED,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/BX,aAAa,CAACW,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIf,UAAU,CAACgB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC9BjB,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEW,IAAI,EAAET,UAAU;MAAEU,KAAK,EAAE;IAAM,CAAC,CAAC,CAAC;IAC9DT,aAAa,CAAC,EAAE,CAAC;IACjBgB,UAAU,CAAC,MAAM;MACflB,WAAW,CAACmB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAAET,IAAI,EAAE,+DAA+D;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC,CAAC;IACxH,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACErC,OAAA,CAACM,aAAa;IAAAwC,QAAA,gBACZ9C,OAAA,CAACS,OAAO;MAACsC,KAAK,EAAC,SAAS;MAAAD,QAAA,eACtB9C,OAAA,CAACe,gBAAgB;QAAA+B,QAAA,GACdrB,QAAQ,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KACxBD,IAAI,CAACZ,KAAK,gBACRrC,OAAA,CAACiB,UAAU;UAAA6B,QAAA,eACT9C,OAAA,CAACE,IAAI;YAAA4C,QAAA,EAAEG,IAAI,CAACb;UAAI;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC,GADTJ,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CAAC,gBAEbtD,OAAA,CAACmB,WAAW;UAAA2B,QAAA,eACV9C,OAAA,CAACE,IAAI;YAAA4C,QAAA,EAAEG,IAAI,CAACb;UAAI;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC,GADRJ,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CAEhB,CAAC,eACFtD,OAAA;UAAKuD,GAAG,EAAE1B;QAAW;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,eACVtD,OAAA,CAACW,gBAAgB;MAAAmC,QAAA,EACd3C,iBAAiB,CAAC6C,GAAG,CAAC,CAACb,MAAM,EAAEe,KAAK,kBACnClD,OAAA,CAACa,YAAY;QAAa2C,OAAO,EAAEA,CAAA,KAAMtB,iBAAiB,CAACC,MAAM,CAAE;QAAAW,QAAA,EAChEX,MAAM,CAAC/B;MAAQ,GADC8C,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc,CAAC,eACnBtD,OAAA,CAACqB,cAAc;MAAAyB,QAAA,gBACb9C,OAAA,CAACC,QAAQ;QACPwC,KAAK,EAAEd,UAAW;QAClB8B,QAAQ,EAAEnB,iBAAkB;QAC5BoB,SAAS,EAAE,GAAI;QACfC,WAAW,EAAC,4BAA4B;QACxCC,QAAQ,EAAE;UAAEC,OAAO,EAAE,CAAC;UAAEC,OAAO,EAAE;QAAE;MAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACFtD,OAAA,CAACP,MAAM;QAACsE,IAAI,EAAC,SAAS;QAACC,IAAI,eAAEhE,OAAA,CAACH,YAAY;UAAAsD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAE;QAACE,OAAO,EAAEd,UAAW;QAAAI,QAAA,EAAC;MAEpE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEpB,CAAC;AAAC9B,EAAA,CAjEID,OAAO;AAAA0C,GAAA,GAAP1C,OAAO;AAmEb,eAAeA,OAAO;AAAC,IAAAf,EAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAA2C,GAAA;AAAAC,YAAA,CAAA1D,EAAA;AAAA0D,YAAA,CAAAxD,GAAA;AAAAwD,YAAA,CAAAtD,GAAA;AAAAsD,YAAA,CAAApD,GAAA;AAAAoD,YAAA,CAAAlD,GAAA;AAAAkD,YAAA,CAAAhD,GAAA;AAAAgD,YAAA,CAAA9C,GAAA;AAAA8C,YAAA,CAAA5C,GAAA;AAAA4C,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}