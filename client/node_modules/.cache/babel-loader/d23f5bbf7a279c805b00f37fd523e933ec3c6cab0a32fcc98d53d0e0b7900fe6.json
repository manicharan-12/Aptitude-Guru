{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern-chatbot\\\\client\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [typing, setTyping] = useState(false);\n  const predefinedOptions = ['Order status', 'Refund request', 'Product inquiry', 'Shipping information'];\n  const sendMessage = async message => {\n    setMessages([...messages, {\n      sender: 'user',\n      text: message\n    }]);\n    setTyping(true);\n    try {\n      const response = await axios.post('http://localhost:5000/api/tickets', {\n        query: message\n      });\n      setMessages([...messages, {\n        sender: 'user',\n        text: message\n      }, {\n        sender: 'bot',\n        text: 'Ticket created successfully. Thank you!'\n      }]);\n    } catch (error) {\n      setMessages([...messages, {\n        sender: 'user',\n        text: message\n      }, {\n        sender: 'bot',\n        text: 'Failed to create ticket. Please try again.'\n      }]);\n    } finally {\n      setTyping(false);\n    }\n  };\n  const handlePredefinedOptionClick = option => {\n    sendMessage(option);\n  };\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    sendMessage(input);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)), typing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot\",\n        children: \"Bot is typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-options\",\n      children: predefinedOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handlePredefinedOptionClick(option),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"chatbot-input\",\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your query...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"tBgYUnNH2TKjpDQNpfnBr55V0dE=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","typing","setTyping","predefinedOptions","sendMessage","message","sender","text","response","post","query","error","handlePredefinedOptionClick","option","handleFormSubmit","e","preventDefault","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["D:/mern-chatbot/client/src/components/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [typing, setTyping] = useState(false);\r\n  const predefinedOptions = [\r\n    'Order status',\r\n    'Refund request',\r\n    'Product inquiry',\r\n    'Shipping information',\r\n  ];\r\n\r\n  const sendMessage = async (message) => {\r\n    setMessages([...messages, { sender: 'user', text: message }]);\r\n    setTyping(true);\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/tickets', { query: message });\r\n      setMessages([...messages, { sender: 'user', text: message }, { sender: 'bot', text: 'Ticket created successfully. Thank you!' }]);\r\n    } catch (error) {\r\n      setMessages([...messages, { sender: 'user', text: message }, { sender: 'bot', text: 'Failed to create ticket. Please try again.' }]);\r\n    } finally {\r\n      setTyping(false);\r\n    }\r\n  };\r\n\r\n  const handlePredefinedOptionClick = (option) => {\r\n    sendMessage(option);\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    sendMessage(input);\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-messages\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`message ${msg.sender}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n        {typing && <div className=\"message bot\">Bot is typing...</div>}\r\n      </div>\r\n      <div className=\"chatbot-options\">\r\n        {predefinedOptions.map((option, index) => (\r\n          <button key={index} onClick={() => handlePredefinedOptionClick(option)}>\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <form className=\"chatbot-input\" onSubmit={handleFormSubmit}>\r\n        <input type=\"text\" value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Type your query...\" />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}